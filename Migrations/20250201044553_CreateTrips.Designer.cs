// <auto-generated />
using System;
using ETLproj.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ETLproj.Migrations
{
    [DbContext(typeof(TripDataDContext))]
    [Migration("20250201044553_CreateTrips")]
    partial class CreateTrips
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.12")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ETLproj.Models.TripData", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("DOLocationID")
                        .IsRequired()
                        .HasColumnType("INT");

                    b.Property<DateTime?>("DropoffDatetime")
                        .IsRequired()
                        .HasColumnType("DATETIME");

                    b.Property<decimal?>("FareAmount")
                        .IsRequired()
                        .HasColumnType("DECIMAL(10,2)");

                    b.Property<int?>("PULocationID")
                        .IsRequired()
                        .HasColumnType("INT");

                    b.Property<int?>("PassengerCount")
                        .IsRequired()
                        .HasColumnType("INT");

                    b.Property<DateTime?>("PickupDatetime")
                        .IsRequired()
                        .HasColumnType("DATETIME");

                    b.Property<string>("StoreAndFwdFlag")
                        .IsRequired()
                        .HasColumnType("VARCHAR(3)");

                    b.Property<decimal?>("TipAmount")
                        .IsRequired()
                        .HasColumnType("DECIMAL(10,2)");

                    b.Property<decimal?>("TripDistance")
                        .IsRequired()
                        .HasColumnType("DECIMAL(10,2)");

                    b.HasKey("Id");

                    b.HasIndex("DropoffDatetime");

                    b.HasIndex("PULocationID");

                    b.HasIndex("PickupDatetime");

                    b.HasIndex("TripDistance");

                    b.ToTable("Trips", null, t =>
                        {
                            t.HasCheckConstraint("CHK_StoreAndFwdFlag", "StoreAndFwdFlag IN ('Yes', 'No')");
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
